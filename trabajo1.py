# -*- coding: utf-8 -*-
"""Programa de sistematización.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T96VtuJstDs6Rig1jGx81UaWDiM49qGG
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import math

path="BASE DE DATOS.xlsx"
BD=pd.read_excel(path)

col_val=[]
columnas=[]
for i in BD:
  columnas.append(i)
  col_val.append(list(BD[i]))

#print(columnas)
#print(col_val)
while True:
  print("1 Mostrar base de datos")
  print("2 Insertar valor")
  print("3 Generar estadísticas")
  print("4 Generar gráfico")
  print("5 Insertar característica")
  print("6 Salir")
  print()
  opc=input("Selecciona una opción: ")
  print()
  ################################################################
  if opc=="1":
    if len(BD)==0:
      print("No hay datos")
      print()
    else:
      print(BD)
      print()
  ################################################################
  elif opc=="2":
    print("CARACTERÍSTICAS")
    if len(columnas)==0:
      print("No hay características")
    else:
      for i in range(1,len(columnas)):
        if columnas[i]!="Unnamed: 0":
          print("",i,columnas[i])
      print()

      while True:
        val=input("Ingresa n° de característica y valor: ")
        
        if val!="x":
          ind_col=int(val[0:val.index(",")])
      
          #print(col_val[ind_col])
          j=True
          for i in range(len(col_val[ind_col])):
            if pd.isna(col_val[ind_col][i]):
              col_val[ind_col][i]=val[val.index(",")+1:len(val)]
              j=False
              break

          #print(col_val[ind_col])
          if j:
            col_val[ind_col].append(val[val.index(",")+1:len(val)])
          #print(col_val[ind_col])
          data={}
          for i in range(1,len(columnas)):
            if j and columnas[i]!=columnas[ind_col]:
              col_val[i].append(math.nan)
            data[columnas[i]]=col_val[i]

          df=pd.DataFrame(data, columns=columnas[1:len(columnas)])
          df.to_excel(path)
        else:
          break

      BD=pd.read_excel(path)

      col_val=[]
      columnas=[]
      for i in BD:
        columnas.append(i)
        col_val.append(list(BD[i]))
  ################################################################    
  elif opc=="3":
    if len(BD)==0:
      print("No hay datos")
    else:
      for i in range(1,len(columnas)):
        if columnas[i]!="Unnamed: 0":
          print("",i,columnas[i])
      print()
      val=int(input("Ingresa n° de característica: "))
      print()
      print(columnas[val])
      if isinstance(col_val[val][0],float) or isinstance(col_val[val][0],int):
        print(" ","Total:  ",round(sum(col_val[val]),2))
        print(" ","Máximo: ",max(col_val[val]))
        print(" ","Mínimo: ",min(col_val[val]))
        print(" ","Promedio:",round(sum(col_val[val])/len(col_val[val]),2))
      else:
        dicc={}
        for i in col_val[val]:
          if pd.isna(i):
            break
          else:
            if i in dicc:
              dicc[i]+=1
            else:
              dicc[i]=1
  
        for i in dicc:
          print(" ",i+":",str(dicc[i])+",",str(round(100*dicc[i]/len(col_val[val]),2))+"%")
      print()
  ################################################################
  elif opc=="4":
    if len(BD)==0:
      print("No hay datos")
    else:
      for i in range(1,len(columnas)):
        if columnas[i]!="Unnamed: 0":
          print("",i,columnas[i])
      print()
      val=int(input("Ingresa n° de característica: "))
      print()
      print(columnas[val])
      if isinstance(col_val[val][0],float) or isinstance(col_val[val][0],int):
        fig, ax = plt.subplots()
        ax.plot(col_val[0], col_val[val])
        ax.set_ylabel(columnas[val])
        plt.show()
        print(" ","Total:  ",round(sum(col_val[val]),2))
        print(" ","Máximo: ",max(col_val[val]))
        print(" ","Mínimo: ",min(col_val[val]))
        print(" ","Promedio:",round(sum(col_val[val])/len(col_val[val]),2))
      else:
        dicc={}
        for i in col_val[val]:
          if pd.isna(i):
            break
          else:
            if i in dicc:
              dicc[i]+=1
            else:
              dicc[i]=1
        
        l_pie=[]
        l_labels=[]
        for i in dicc:
          print(" ",i+":",str(dicc[i])+",",str(round(100*dicc[i]/len(col_val[val]),2))+"%")
          l_pie.append(dicc[i])
          l_labels.append(i)
        fig, ax = plt.subplots()
        ax.pie(l_pie,labels=l_labels)
        plt.show()
        
      print()
  ################################################################
  elif opc=="5":
    data={}
    n_carac=input("Característica: ")
    if len(columnas)==0:
      columnas.append(math.nan)
      columnas.append(n_carac)
      data={n_carac:[]}
    else:
      columnas.append(n_carac)
      for i in range(1,len(columnas)-1):
        data[columnas[i]]=col_val[i]

    df=pd.DataFrame(data, columns=columnas[1:len(columnas)])
    df.to_excel(path)
    BD=pd.read_excel(path)
    
    col_val=[]
    columnas=[]
    for i in BD:
      columnas.append(i)
      col_val.append(list(BD[i]))

  #################################################################
  elif opc=="6":
    break
  else:
    print("Opción no válida")